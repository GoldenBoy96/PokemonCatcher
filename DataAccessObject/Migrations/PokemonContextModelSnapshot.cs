// <auto-generated />
using System;
using DataAccessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessObject.Migrations
{
    [DbContext(typeof(PokemonContext))]
    partial class PokemonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessObject.Pokemon", b =>
                {
                    b.Property<int>("PokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PokemonId"));

                    b.Property<int?>("EvAtk")
                        .HasColumnType("int");

                    b.Property<int?>("EvDef")
                        .HasColumnType("int");

                    b.Property<int?>("EvHp")
                        .HasColumnType("int");

                    b.Property<int?>("EvSpA")
                        .HasColumnType("int");

                    b.Property<int?>("EvSpD")
                        .HasColumnType("int");

                    b.Property<int?>("EvSpe")
                        .HasColumnType("int");

                    b.Property<int?>("IvAtk")
                        .HasColumnType("int");

                    b.Property<int?>("IvDef")
                        .HasColumnType("int");

                    b.Property<int?>("IvHp")
                        .HasColumnType("int");

                    b.Property<int?>("IvSpA")
                        .HasColumnType("int");

                    b.Property<int?>("IvSpD")
                        .HasColumnType("int");

                    b.Property<int?>("IvSpe")
                        .HasColumnType("int");

                    b.Property<int?>("Nature")
                        .HasColumnType("int");

                    b.Property<int?>("PokemonLevel")
                        .HasColumnType("int");

                    b.Property<string>("PokemonName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PokemonId")
                        .HasName("PK__Pokemon__69C4E92391505AD7");

                    b.ToTable("Pokemon", (string)null);
                });

            modelBuilder.Entity("DataAccessObject.PokemonMove", b =>
                {
                    b.Property<int>("MoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MoveId"));

                    b.Property<int?>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MoveName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MoveType")
                        .HasColumnType("int");

                    b.HasKey("MoveId")
                        .HasName("PK__PokemonM__A931A41C48C0241C");

                    b.ToTable("PokemonMove", (string)null);
                });

            modelBuilder.Entity("DataAccessObject.PokemonSpecie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BaseAtk")
                        .HasColumnType("int");

                    b.Property<int?>("BaseDef")
                        .HasColumnType("int");

                    b.Property<int?>("BaseHp")
                        .HasColumnType("int");

                    b.Property<int?>("BaseSpA")
                        .HasColumnType("int");

                    b.Property<int?>("BaseSpD")
                        .HasColumnType("int");

                    b.Property<int?>("BaseSpe")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NationalNo")
                        .HasColumnType("int");

                    b.Property<string>("SpecieName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Type1")
                        .HasColumnType("int");

                    b.Property<int?>("Type2")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__PokemonS__E9AA1A64354326FF");

                    b.ToTable("PokemonSpecie", (string)null);
                });

            modelBuilder.Entity("PokemonMovePokemonSpecie", b =>
                {
                    b.Property<int>("PokemonMovesMoveId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonSpeciesId")
                        .HasColumnType("int");

                    b.HasKey("PokemonMovesMoveId", "PokemonSpeciesId");

                    b.HasIndex("PokemonSpeciesId");

                    b.ToTable("PokemonMovePokemonSpecie");
                });

            modelBuilder.Entity("PokemonPokemonMove", b =>
                {
                    b.Property<int>("PokemonMovesMoveId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonsPokemonId")
                        .HasColumnType("int");

                    b.HasKey("PokemonMovesMoveId", "PokemonsPokemonId");

                    b.HasIndex("PokemonsPokemonId");

                    b.ToTable("PokemonPokemonMove");
                });

            modelBuilder.Entity("PokemonMovePokemonSpecie", b =>
                {
                    b.HasOne("DataAccessObject.PokemonMove", null)
                        .WithMany()
                        .HasForeignKey("PokemonMovesMoveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessObject.PokemonSpecie", null)
                        .WithMany()
                        .HasForeignKey("PokemonSpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokemonPokemonMove", b =>
                {
                    b.HasOne("DataAccessObject.PokemonMove", null)
                        .WithMany()
                        .HasForeignKey("PokemonMovesMoveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessObject.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonsPokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
